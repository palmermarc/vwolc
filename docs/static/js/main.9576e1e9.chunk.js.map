{"version":3,"sources":["assets/images/Logo.svg","Containers/Sidebar.js","Components/MobsList.js","Components/MobsEdit.js","Containers/Mobs.js","_actions/actions.areas.js","constants/config.js","store/InitialState.js","_reducers/index.js","_reducers/reducers.areas.js","store/configureStore.js","Components/AreasList.js","store/store.js","core/OLC.js","Components/AreasEdit.js","Containers/Areas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Sidebar","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opened","react_default","a","createElement","className","Image","src","Logo","alt","title","Menu","text","vertical","Item","as","Link","to","Component","MobsList","mobs","vnum","name","short_description","long_description","description","act","affected_by","alignment","level","exp_level","hitroll","damroll","ac","hp","gold","sex","getMobs","bind","assertThisInitialized","mobsJson","localStorage","getItem","setState","JSON","parse","id","map","mob","List","key","divided","relaxed","Content","Header","Description","Button","Icon","React","withRouter","connect","dispatch","MobsEdit","handleChange","errors","genders","value","affects","getMob","e","_e$target","target","push","field","message","length","prevState","objectSpread","defineProperty","unsaved","Message","negative","error","Form","Group","widths","Input","fluid","label","placeholder","TextArea","onChange","Select","options","Dropdown","multiple","selection","Mobs","Grid","columns","stackable","textAlign","Row","verticalAlign","Column","Components_MobsList","Components_MobsEdit","createHistory","setActiveArea","areaId","type","setNewActiveArea","config","dbVersion","dbName","dbSize","dbDescription","InitialState","user","isLoggedIn","token","userId","firstName","lastName","area","combineReducers","areas","arguments","undefined","initialState","action","newState","assign","console","log","activeArea","configureStore","middlewares","thunk","createStore","compose","applyMiddleware","apply","AreasList","createBrowserHistory","OLC","openDatabase","transaction","tx","executeSql","rs","i","rows","created_by","areaName","areaCreatedBy","data","sendMail","path","getAreas","actions","forceUpdate","self","rowid","_this2","onClick","bindActionCreators","AreasEdit","handleSubmit","res","history","insertId","ts","updateArea","niceName","getArea","createArea","nextProps","match","params","document","onSubmit","content","Areas","Components_AreasList","Components_AreasEdit","App","Router","Containers_Sidebar","Route","exact","component","Boolean","window","location","hostname","store","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9576e1e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.4b14043b.svg\";","import React, { Component } from 'react';\r\nimport { Menu, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../assets/images/Logo.svg';\r\nimport '../assets/css/Sidebar.css';\r\n\r\nclass Sidebar extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            opened: true,\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Sidebar\">\r\n                <header className=\"App-header\">\r\n                    <Image src={Logo} alt=\"The Death of Cain: Online Area Builder\" title=\"The Death of Cain: Online Area Builder\" />\r\n                    <nav>\r\n                        <Menu text vertical>\r\n                            <Menu.Item as={Link} to='/areas/'>Areas</Menu.Item>\r\n                            <Menu.Item as={Link} to='/rooms/'>Rooms</Menu.Item>\r\n                            <Menu.Item as={Link} to='/mobs/'>Mobs</Menu.Item>\r\n                            <Menu.Item as={Link} to='/objects/'>Objects</Menu.Item>\r\n                        </Menu>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, List, Icon } from 'semantic-ui-react';\r\n\r\nclass MobsList extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            mobs: [{\r\n                \"vnum\":\t1,\r\n                \"name\":\t\"\",\r\n                \"short_description\": \"\",\r\n                \"long_description\":\t\"\",\r\n                \"description\":\t\"\",\r\n                \"act\":\t0,\r\n                \"affected_by\": 0,\r\n                \"alignment\": 0,\r\n                \"level\": 0,\r\n                \"exp_level\": 0,\r\n                \"hitroll\":\t0,\r\n                \"damroll\":\t0,\r\n                \"ac\": 0,\r\n                \"hp\": 100,\r\n                \"gold\":\t10,\r\n                \"sex\":\t0\r\n            }],\r\n        };\r\n\r\n        this.getMobs = this.getMobs.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Call API\r\n        this.getMobs();\r\n    }\r\n\r\n    getMobs() {\r\n        let mobsJson = localStorage.getItem('mobs');\r\n        if( mobsJson != null ) {\r\n            this.setState({\r\n                mobs: JSON.parse(mobsJson) || this.state.mobs\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mobs-list\" className=\"fade-in\">\r\n                {this.state.mobs.map((mob) => (\r\n                    <List key={mob.vnum} divided relaxed>\r\n                        <List.Item>\r\n                            <List.Content>\r\n                                <List.Header>({mob.vnum}) {mob.name}</List.Header>\r\n                                <List.Description>{mob.short_description}</List.Description>\r\n                            </List.Content>\r\n                        </List.Item>\r\n                    </List>\r\n                ))}\r\n                <div id=\"view-header-section\">\r\n                    <Button as={Link} to={'/mobs/create'} className=\"view-create-new\">\r\n                        <Icon name=\"plus\" />\r\n                        Create New\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {};\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MobsList));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Form, Dropdown, Message } from 'semantic-ui-react';\r\n\r\nclass MobsEdit extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            errors: [],\r\n            genders: [\r\n                { key: '0', text: 'Unsullied', value: '0' },\r\n                { key: '1', text: 'Male', value: '1' },\r\n                { key: '2', text: 'Female', value: '2' },\r\n            ],\r\n            affects: [\r\n                { key: \"0\", text: \"Invis\", value: \"2\" },\r\n                { key: \"1\", text: \"Detect Invis\", value: \"8\" },\r\n                { key: \"2\", text: \"Detect Hidden\", value: \"32\" },\r\n                { key: \"3\", text: \"Shadow Plane\", value: \"64\" },\r\n                { key: \"4\", text: \"Sanct\", value: \"128\" },\r\n                { key: \"5\", text: \"Faerie Fire\", value: \"256\" },\r\n                { key: \"6\", text: \"Infravision\", value: \"512\" },\r\n                { key: \"7\", text: \"Prot vs Evil\", value: \"8192\" },\r\n                { key: \"8\", text: \"Sneak\", value: \"32768\" },\r\n                { key: \"9\", text: \"Hide\", value: \"65536\" },\r\n                { key: \"10\", text: \"Flying\", value: \"524288\" },\r\n                { key: \"11\", text: \"Pass Door\", value: \"1048576\" },\r\n                { key: \"12\", text: \"Shadow Sight\", value: \"4194304\" },\r\n            ],\r\n            mob: {\r\n                \"vnum\":\t1,\r\n                \"name\":\t\"\",\r\n                \"short_description\": \"\",\r\n                \"long_description\":\t\"\",\r\n                \"description\":\t\"\",\r\n                \"act\":\t0,\r\n                \"affected_by\": 0,\r\n                \"alignment\": 0,\r\n                \"level\": 0,\r\n                \"exp_level\": 0,\r\n                \"hitroll\":\t0,\r\n                \"damroll\":\t0,\r\n                \"ac\": 0,\r\n                \"hp\": 100,\r\n                \"gold\":\t10,\r\n                \"sex\":\t0\r\n            },\r\n        };\r\n\r\n        this.getMob = this.getMob.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Call API\r\n        this.getMob();\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        \r\n        let errors = [];\r\n\r\n        if( name === \"ac\" && value < 0 ) {\r\n            errors.push({field: \"ac\", message: \"Armor must be a positive number.\"});\r\n        }\r\n        \r\n        if( name === \"ac\" && value > 10000 ) {\r\n            errors.push({field: \"ac\", message: \"Armor cannot go higher than 10,000. This gives the mob a 95% damage reduction. Maybe you should make it stance to make it even stronger?\"});\r\n        }\r\n\r\n        if( name === \"hp\" && value < 500 ) {\r\n            errors.push({field: \"hp\", message: \"You cannot set the hp value to less than 500.\" });\r\n        }\r\n\r\n        if( name === \"hp\" && value > 250000 ) {\r\n            errors.push({field: \"hp\", message: \"You cannot set the hp value to more than 250000. Might we suggest increasing the remort level to make it tougher to kill?\" });\r\n        }\r\n\r\n        if( name === \"gender\" && (value !== 0 && value !== 1 && value !== 2)) {\r\n            errors.push({ field: \"gender\", message: \"Please select an appropriate gender.\"});\r\n        }\r\n\r\n        if( name === \"name\" && value.length === 0) {\r\n            errors.push({ field: \"name\", message: \"Name cannot be blank.\"});\r\n        }\r\n\r\n        if( name === \"short_description\" && value.length === 0) {\r\n            errors.push({ field: \"short_description\", message: \"Short Description cannot be blank.\"});\r\n        }\r\n\r\n        if( name === \"long_description\" && value.length === 0) {\r\n            errors.push({ field: \"long_description\", message: \"Long Description cannot be blank.\"});\r\n        }\r\n\r\n        if( name === \"description\" && value.length === 0) {\r\n            errors.push({ field: \"description\", message: \"Description cannot be blank.\"});\r\n        }\r\n\r\n        if( name === \"alignment\" && ( value > 1000 || value < -1000 ) ) {\r\n            errors.push({ field: \"alignment\", message: \"Alignment must be between 1000 and -1000\" });\r\n        }\r\n\r\n        if( name === \"level\" && value <= 0 ) {\r\n            errors.push({field: \"level\", message: \"Mob level must be greater than 0.\" });\r\n        }\r\n\r\n        if( name === \"level\" && value > 250000 ) {\r\n            errors.push({field: \"level\", message: \"Mob level cannot be greater than 250,000.\" });\r\n        }\r\n\r\n        if( name === \"exp_level\" && value <= 0 ) {\r\n            errors.push({field: \"exp_level\", message: \"EXP level must be greater than 0.\" });\r\n        }\r\n\r\n        if( name === \"exp_level\" && value > 250000 ) {\r\n            errors.push({field: \"exp_level\", message: \"EXP level cannot be greater than 250,000.\" });\r\n        }\r\n\r\n        if( name === \"hitroll\" && value <= 0 ) {\r\n            errors.push({field: \"hitroll\", message: \"Hitroll must be greater than 0.\" });\r\n        }\r\n\r\n        if( name === \"hitroll\" && value > 7500 ) {\r\n            errors.push({field: \"hitroll\", message: \"Hitroll cannot be greater than 7,500.\" });\r\n        }\r\n\r\n        if( name === \"damroll\" && value <= 0 ) {\r\n            errors.push({field: \"damroll\", message: \"Damroll must be greater than 0.\" });\r\n        }\r\n\r\n        if( name === \"damroll\" && value > 7500 ) {\r\n            errors.push({field: \"damroll\", message: \"Damroll cannot be greater than 7,500.\" });\r\n        }\r\n\r\n        this.setState( { errors: errors } );\r\n\r\n        if( errors.length > 0 ) {\r\n            return false;\r\n        }\r\n        \r\n        this.setState(\r\n            prevState => ({\r\n                mob: {\r\n                    ...prevState.mob,\r\n                    [name]: value\r\n                }\r\n            })\r\n        );\r\n        \r\n        this.setState({unsaved: true});\r\n    }\r\n\r\n    getMob() {\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mob-stats\" className=\"fade-in\">\r\n                {this.state.errors.length > 0  &&\r\n                    <Message negative>\n                        <Message.Header>Please fix the following errors:</Message.Header>\r\n                        {this.state.errors.map((error) => (\n                            <p>{error.message}</p>\r\n                        ))}\r\n                    </Message>\r\n                }\r\n                <Form>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.Input fluid name=\"name\" label='Name' placeholder='name' />\r\n                        <Form.Input fluid name=\"short_description\" label='Short Desc' placeholder='Short desc' />\r\n                    </Form.Group>\r\n                    <Form.Input fluid name=\"long_description\" label='Long Desc' placeholder='' />\r\n                    <Form.TextArea name=\"description\" label='Look' placeholder='The mob looks back at you!' />\r\n                    <Form.Group widths=\"equal\">\r\n                        <Form.Input fluid name=\"alignment\" label='Alignment' placeholder='0' value={this.state.mob.alignment} onChange={this.handleChange}  />\r\n                        <Form.Input fluid name=\"level\" label='Level' placeholder='0' value={this.state.mob.level} onChange={this.handleChange}  />\r\n                        <Form.Input fluid name=\"exp_level\" label='EXP Level' placeholder='0' value={this.state.mob.exp_level} onChange={this.handleChange}  />\r\n                        <Form.Input fluid name=\"gold\" label='Gold' placeholder='0' value={this.state.mob.gold} onChange={this.handleChange}  />\r\n                        <Form.Select fluid name=\"sex\" label='Gender' options={this.state.genders} placeholder='Gender' />\r\n                    </Form.Group>\r\n                    <Form.Group widths=\"equal\">\r\n                        <Form.Input fluid name=\"hp\" label='HP' placeholder='0' value={this.state.mob.hp} onChange={this.handleChange}  />\r\n                        <Form.Input fluid name=\"hitroll\" label='Hitroll' placeholder='0' value={this.state.mob.hitroll} onChange={this.handleChange}  />\r\n                        <Form.Input fluid name=\"damroll\" label='Damroll' placeholder='0' value={this.state.mob.damroll} onChange={this.handleChange}  />\r\n                        <Form.Input fluid name=\"ac\" label='Armor' placeholder='0' value={this.state.mob.ac} onChange={this.handleChange}  />\r\n                    </Form.Group>\r\n                    <Form.Group widths=\"equal\">\r\n                        <Dropdown label='Affects'placeholder='Affects' name=\"affected_by\" fluid multiple selection options={this.state.affects} />\r\n                    </Form.Group>\r\n                </Form>\r\n\t\t\t\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {};\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MobsEdit));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport MobsList from '../Components/MobsList';\r\nimport MobsEdit from '../Components/MobsEdit';\r\n\r\n\r\nclass Mobs extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrap fade-in\">\r\n                <Grid columns={2} stackable textAlign='center'>\r\n                    <Grid.Row verticalAlign='top'>\r\n                        <Grid.Column>\r\n                            <MobsList />\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <MobsEdit />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {};\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Mobs));","import createHistory from 'history/createBrowserHistory';\r\n\r\nconst history = createHistory();\r\n\r\nfunction setNewActiveArea(areaId) {\r\n    return {\r\n        type: 'ACTIVE_AREA',\r\n        areaId: areaId\r\n    }\r\n}\r\n\r\nexport function setActiveArea(areaId) {\r\n    return (dispatch) => {\r\n        dispatch( setNewActiveArea( areaId ) )\r\n    }\r\n}","const config = {\r\n    dbVersion: \"1.0\",\r\n    dbName: \"tdoc_olc\",\r\n    dbSize: 2*1024*1024,\r\n    dbDescription: \"Local Storage database for the Online Area Builder for The Death of Caine mud.\",\r\n}\r\n\r\nexport default config;","export default {\r\n    user : {\r\n            isLoggedIn: false,\r\n            token: null,\r\n            userId: null,\r\n            firstName: null,\r\n            lastName: null\r\n    }, \r\n    area : 0\r\n};","import { combineReducers } from 'redux';\r\n//import { items, itemsHasErrored, itemsIsLoading } from './reducers.items';\r\nimport { areas } from './reducers.areas';\r\n\r\nexport default combineReducers({\r\n    areas\r\n    /*items,\r\n    itemsHasErrored,\r\n    itemsIsLoading,\r\n    user*/\r\n});","import initialState from '../store/InitialState';\r\n\r\nexport function areas( state = initialState, action ) {\r\n    let newState = Object.assign({}, state);\r\n\r\n    switch( action.type ) {\r\n        case 'areas':\r\n            newState.areas = action.areas;\r\n            console.log(newState);\r\n            return newState;\r\n        case 'ACTIVE_AREA':\r\n            newState.activeArea = action.activeArea;\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from '../_reducers';\r\n\r\nfunction configureStoreProd(initialState) {\r\n    const middlewares = [\r\n      thunk,\r\n    ];\r\n\r\n    return createStore(combineReducers, initialState, compose(\r\n      applyMiddleware(...middlewares)\r\n      )\r\n    );\r\n}\r\n\r\nfunction configureStoreDev(initialState) {\r\n    const middlewares = [\r\n      thunk,\r\n    ];\r\n\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n    const store = createStore(combineReducers, initialState, composeEnhancers(\r\n      applyMiddleware(...middlewares)\r\n      )\r\n    );\r\n\r\n    if (module.hot) {\r\n        // Enable Webpack hot module replacement for reducers\r\n        module.hot.accept('../_reducers', () => {\r\n            const nextReducer = require('../_reducers').default; // eslint-disable-line global-require\r\n            store.replaceReducer(nextReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n\r\nconst configureStore = process.env.NODE_ENV === 'production' ? configureStoreProd : configureStoreDev;\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport {bindActionCreators } from 'redux';\r\nimport * as actions from '../_actions/actions.areas';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, List, Icon } from 'semantic-ui-react';\r\nimport config from '../constants/config';\r\nimport OLC from '../core/OLC';\r\n\r\nclass AreasList extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            areas: [{\r\n                id:\t1,\r\n                name: \"new_area\",\r\n                created_by: \"author\"\r\n            }],\r\n        };\r\n\r\n        this.getAreas = this.getAreas.bind(this);\r\n        this.setNewActiveArea = this.setNewActiveArea.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Call API\r\n        this.getAreas();\r\n    }\r\n\r\n    setNewActiveArea(areaId) {\r\n        this.props.actions.setActiveArea(areaId);\r\n        this.forceUpdate();\r\n        //this.props.history.push(\"/areas/\"+res.insertId+\"/\");\r\n    }\r\n\r\n    getAreas() {\r\n        let self = this;\r\n        var db = openDatabase(config.dbName, config.dbVersion, config.dbDescription, config.dbSize);\r\n\r\n        let areas = [];\r\n        db.transaction(function(tx){\r\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS areas (name TEXT, created_by TEXT)\");\r\n\r\n            tx.executeSql(\"SELECT rowid, name, created_by FROM areas LIMIT 10000\", [], function(tx, rs) {\r\n                let areas = [];\r\n                for( var i=0; i<rs.rows.length; i++ ) {\r\n                    areas.push({\r\n                        id: rs.rows[i].rowid,\r\n                        name: rs.rows[i].name,\r\n                        created_by: rs.rows[i].created_by\r\n                    });\r\n                }\r\n                self.setState({areas: areas});\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mobs-list\" className=\"fade-in\">\r\n                {this.state.areas.map((area) => (\r\n                    <List key={area.id} divided relaxed>\r\n                        <Link to={\"/areas/\" + area.id + \"/\"} onClick={() => this.setNewActiveArea(area.id)}>\r\n                            <List.Item>\r\n                                <List.Content>\r\n                                    <List.Header>({area.id}) {area.name}</List.Header>\r\n                                    <List.Description>{area.created_by}</List.Description>\r\n                                </List.Content>\r\n                            </List.Item>\r\n                        </Link>\r\n                    </List>\r\n                ))}\r\n                <div id=\"view-header-section\">\r\n                    <Button as={Link} to={'/mobs/create'} className=\"view-create-new\">\r\n                        <Icon name=\"plus\" />\r\n                        Create New\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions,dispatch)\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreasList));","import configureStore from './configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;","/*\r\n * flagship.js\r\n * Main MarcoPromo frontend class to manage core functionality\r\n */\r\n\r\nimport config from '../constants/config';\r\nimport store from '../store/store';\r\nimport React from 'react'\r\nimport { browserHistory } from 'react-router'\r\nimport { Router, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\nconst history = createBrowserHistory();\r\n\r\nclass OLC {\r\n\r\n    constructor() {\r\n        this.config = config;\r\n    }\r\n\r\n    getAreas() {\r\n        var db = openDatabase(this.config.dbName, this.config.dbVersion, this.config.dbDescription, this.config.dbSize);\r\n\r\n        let areas = [];\r\n        db.transaction(function(tx){\r\n\r\n            tx.executeSql(\"CREATE TABLE IF NOT EXISTS areas (id unique, name TEXT, created_by TEXT)\");\r\n\r\n\r\n            tx.executeSql(\"SELECT * FROM areas LIMIT 10000\", [], function(tx, rs) {\r\n                let areas = [];\r\n                for( var i=0; i<rs.rows.length; i++ ) {\r\n                    areas.push({\r\n                        id: rs.rows[i].id,\r\n                        name: rs.rows[i].name,\r\n                        created_by: rs.rows[i].created_by\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        return areas;\r\n    }\r\n\r\n    getArea( areaId ) {\r\n        var db = openDatabase(this.config.dbName, this.config.dbVersion, this.config.dbDescription, this.config.dbSize);\r\n        \r\n        db.transaction(function(tx){\r\n            \r\n            tx.executeSql(\"SELECT * FROM areas WHERE rowid = '\" + areaId + \"'\", [], function(tx, rs) {\r\n                console.log(rs);\r\n                return;\r\n\r\n                return {\r\n                    id: rs.rows[0].rowid,\r\n                    name: rs.rows[0].name,\r\n                    created_by: rs.rows[0].created_by\r\n                };\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    createArea( areaName, areaCreatedBy ) {\r\n        \r\n    }\r\n\r\n    event(action, data = '', target = null, user = null) {\r\n\r\n        //this.log(action, data, target, user);\r\n        this.sendMail(action, data, target, user);\r\n    }\r\n\r\n    error(message, target, user) {\r\n        this.log(\"error\", message, target, user);\r\n    }\r\n\r\n\r\n    redirect(path) {\r\n        //browserHistory.push(path);\r\n    }\r\n\r\n}\r\n\r\nexport default new OLC();","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Form, Message } from 'semantic-ui-react';\r\nimport config from '../constants/config';\r\nimport OLC from '../core/OLC';\r\n\r\nclass AreasEdit extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            errors: [],\r\n            niceName: \"Create Area\",\r\n            areaId: 0,\r\n            name: \"\",\r\n            created_by: \"\",\r\n        };\r\n\r\n        this.getArea = this.getArea.bind(this);\r\n        this.createArea = this.createArea.bind(this);\r\n        this.updateArea = this.updateArea.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if( typeof this.props.match.params.areaId !== \"undefined\" ) {\r\n            this.setState({ areaId: this.props.match.params.areaId, niceName: \"Update Area\" });\r\n            this.getArea(this.props.match.params.areaId);\r\n        }\r\n        this.forceUpdate();\r\n        document.title = this.state.niceName;\r\n    }\r\n\r\n    getArea( areaId ) {\r\n        let self = this;\r\n        var db = openDatabase(config.dbName, config.dbVersion, config.dbDescription, config.dbSize);\r\n        db.transaction(function(tx){\r\n            \r\n            tx.executeSql(\"SELECT * FROM areas WHERE rowid = '\" + areaId + \"'\", [], function(tx, rs) {\r\n                if( rs.rows.length ) {\r\n                    self.setState({\r\n                        name: rs.rows[0].name,\r\n                        created_by: rs.rows[0].created_by\r\n                    });\r\n                }\r\n            }, function(error) {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        \r\n        this.setState({[name]: value});\r\n        this.setState({unsaved: true});\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let self = this;\r\n        if( this.state.name === \"\") {\r\n            this.setState({ errors: [{field: \"name\", message: \"You must provide an area name.\"}] });\r\n        }\r\n\r\n        if( this.state.created_by === \"\") {\r\n            this.setState({ errors: [{field: \"created_by\", message: \"You need to provide a name so we can credit the right person.\"}] });\r\n        }\r\n\r\n        // Don't save anything if there are errors\r\n        if( this.state.errors.length > 0 )\r\n            return false;\r\n\r\n        if( this.state.areaId === 0 ) {\r\n            var db = openDatabase( config.dbName, config.dbVersion, config.dbDescription, config.dbSize);\r\n\r\n            db.transaction(function (tx) {\r\n                tx.executeSql(\"INSERT INTO areas (name, created_by) VALUES (?, ?)\", [self.state.name, self.state.created_by], function(tx, res){\r\n                    self.props.history.push(\"/areas/\"+res.insertId+\"/\");\r\n                }, function(ts, error) {\r\n                    console.log(error);\r\n                });\r\n            });\r\n        }\r\n        else \r\n            this.updateArea();\r\n\r\n        //this.props.history.push(\"/areas/\" + areaId + \"/\");\r\n    }\r\n\r\n    createArea() {\r\n        let self = this;\r\n        var db = openDatabase(config.dbName, config.dbVersion, config.dbDescription, config.dbSize);\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(\"INSERT INTO areas (name, created_by) VALUES (?, ?)\", [self.state.name, self.state.created_by], function(tx, res){\r\n                \r\n            }, function(ts, error) {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    updateArea() {\r\n        let self = this;\r\n        var db = openDatabase(config.dbName, config.dbVersion, config.dbDescription, config.dbSize);\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(\"UPDATE areas SET name = ?, created_by = ? WHERE rowid = ?\", [self.state.name, self.state.created_by, self.state.areaId], function(tx, res){\r\n                self.props.history.push(\"/areas/\"+self.state.areaId+\"/\");\r\n            }, function(ts, error) {\r\n                console.log(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mob-stats\" className=\"fade-in\">\r\n                {this.state.errors.length > 0  &&\r\n                    <Message negative>\r\n                        <Message.Header>Please fix the following errors:</Message.Header>\r\n                        {this.state.errors.map((error) => (\r\n                            <p>{error.message}</p>\r\n                        ))}\r\n                    </Message>\r\n                }\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.Input fluid name=\"name\" label='Area Name' placeholder='Area Name Here' value={this.state.name} onChange={this.handleChange} />\r\n                        <Form.Input fluid name=\"created_by\" label='Created By' placeholder='Your Name Here' value={this.state.created_by} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Button content={this.state.niceName} />\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {};\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreasEdit));","import React from 'react';\r\nimport {bindActionCreators } from 'redux';\r\nimport * as actions from '../_actions/actions.areas';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport AreasList from '../Components/AreasList';\r\nimport AreasEdit from '../Components/AreasEdit';\r\n\r\nclass Areas extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrap fade-in\">\r\n                <Grid columns={2} stackable textAlign='center'>\r\n                    <Grid.Row verticalAlign='top'>\r\n                        <Grid.Column>\r\n                            <AreasList />\r\n                        </Grid.Column>\r\n                        <Grid.Column>\r\n                            <AreasEdit />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions,dispatch)\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Areas));","import React, { Component } from 'react';\r\nimport { Router, Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\nimport {withRouter} from \"react-router\";\r\nimport * as actions from \"./_actions/index\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nimport './App.css';\r\n\r\nimport Sidebar from './Containers/Sidebar';\r\nimport Mobs from './Containers/Mobs';\r\nimport Areas from './Containers/Areas';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"marcopromo-app-container\"}>\r\n                <Router history={history}>\r\n                    <div id=\"\" className=\"content\">\r\n                        <Sidebar></Sidebar>\r\n                        <div id=\"content_bin\">\r\n                            <Route exact path=\"/areas/\" niceName=\"Areas\" component={Areas} />\r\n                            <Route exact path=\"/areas/:areaId/\" niceName=\"Areas\" component={Areas} />\r\n\r\n                            <Route exact path=\"/mobs/\" niceName=\"Mobs\" component={Mobs} />\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n\r\n//<Route exact path=\"/mobs/create\" component={MobsCopy} />\r\n//<Route exact path=\"/mobs/:copyId/\" component={MobsEdit} />\r\n//<Route exact path=\"/user/logout/\" component={LogoutPage} />\r\n//<Route exact path=\"/login/\" component={Login} />\r\n//<Route exact path=\"/objects/\" component={ObjectsList} />\r\n//<Route exact path=\"/objects/create/\" component={ObjectCreate} />\r\n//<Route exact path=\"/objects/edit/:listenerId/\" component={ObjectsList} />\r\n//<Route exact path=\"/rooms/\" component={RoomsList} />\r\n//<Route exact path=\"/rooms/create/\" component={RoomsCreate} />\r\n//<Route exact path=\"/rooms/edit/:listenerId/\" component={RoomsList} />","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux';\r\nimport configureStore from './store/configureStore';\r\n\r\nlet store = configureStore();\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}